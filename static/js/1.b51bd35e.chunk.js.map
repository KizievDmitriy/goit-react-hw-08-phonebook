{"version":3,"file":"static/js/1.b51bd35e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Spinner/Spinner.module.scss?e73c","components/Spinner/Spinner.jsx","components/ContactForm/ContactForm.jsx","hooks/useAddContact.js","redux/contacts/contactsSelectors.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.scss?e1a7","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx","services/normalizedName.js","services/validationPhone.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"Spinner_spinner__H2HDD\",\"spin\":\"Spinner_spin__DSOqJ\"};","import { CgSpinner } from 'react-icons/cg';\n//Local import\nimport styles from './Spinner.module.scss';\n\nexport const Spinner = ({ size }) => {\n  return <CgSpinner size={size} className={styles.spinner} />;\n};\n","//Material UI\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport CssBaseline from '@mui/material/CssBaseline';\n//Local import\nimport { useAddContact } from 'hooks/useAddContact';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nexport const ContactForm = () => {\n  const {\n    name,\n    phone,\n    handleAddContact,\n    handleChangeName,\n    handleChangePhone,\n    isLoading,\n    nameError,\n    phoneError,\n  } = useAddContact();\n\n  return (\n    <>\n      <Typography\n        component=\"h1\"\n        variant=\"h4\"\n        sx={{\n          textAlign: 'center',\n          marginBottom: 2,\n          letterSpacing: 2,\n          color: 'Highlight',\n        }}\n      >\n        Phonebook\n      </Typography>\n\n      <Box\n        sx={{\n          padding: 4,\n          bgcolor: '#fff',\n          borderRadius: 4,\n\n          '&:hover': { boxShadow: '0px 0px 42px -20px rgba(0,0,0,0.3)' },\n        }}\n      >\n        <CssBaseline />\n        <Box component=\"form\" noValidate onSubmit={handleAddContact} sx={{}}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                error={nameError}\n                type=\"text\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                name=\"name\"\n                variant=\"standard\"\n                onChange={handleChangeName}\n                value={name}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                type=\"tel\"\n                error={phoneError}\n                required\n                fullWidth\n                id=\"number\"\n                label=\"Phone\"\n                name=\"number\"\n                variant=\"standard\"\n                onChange={handleChangePhone}\n                value={phone}\n                onKeyPress={e => !/[0-9]/.test(e.key) && e.preventDefault()}\n              />\n            </Grid>\n          </Grid>\n\n          <Button\n            type=\"submit\"\n            disabled={name.length < 3}\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3 }}\n          >\n            Add contact {isLoading && <Spinner size={20} />}\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport Notiflix from 'notiflix';\nimport { useAddContactMutation, useGetContactsQuery } from '../redux/api';\nimport { normalizedName } from 'services/normalizedName';\nimport { validationPhone } from 'services/validationPhone';\n\nexport const useAddContact = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact, { isError, isLoading, isSuccess }] =\n    useAddContactMutation();\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [nameError, setNameError] = useState(false);\n  const [phoneError, setPhoneError] = useState(false);\n\n  const handleChangeName = e => setName(e.currentTarget.value);\n  const handleChangePhone = e => setPhone(e.currentTarget.value);\n\n  const handleAddContact = event => {\n    event.preventDefault();\n\n    const contactsName = contacts.map(contact => contact.name);\n\n    const isMatchName = contactsName.find(\n      contactName => contactName.toLowerCase() === name.toLowerCase() );\n    \n\n    if (isMatchName) {\n      setNameError(true);\n      return Notiflix.Notify.warning(`${name} is already in contacts `);\n    } else {\n      setNameError(false);\n    }\n\n    const isValidationPhoneError = validationPhone(phone);\n\n    if (isValidationPhoneError) {\n      return setPhoneError(true);\n    }\n\n    const newContact = {\n      name: normalizedName(name),\n      number: phone,\n    };\n\n    addContact(newContact);\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      Notiflix.Notify.success(`Contact  is created!`);\n      reset();\n    }\n  }, [isSuccess]);\n\n  useEffect(() => {\n    if (isError) {\n       Notiflix.Notify.error(`Something was wrong`);\n    }\n  }, [isError]);\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n    setNameError(false);\n    setPhoneError(false);\n  };\n\n  return {\n    name,\n    phone,\n    handleAddContact,\n    handleChangeName,\n    handleChangePhone,\n    isLoading,\n    nameError,\n    phoneError,\n  };\n};\n","export const getFilter = state => state.contacts.filter;\n","import { useSelector, useDispatch } from 'react-redux';\n//Material UI\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Box from '@mui/material/Box';\n//Local import\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport { getFilter } from 'redux/contacts/contactsSelectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const matches = useMediaQuery('(min-width:600px)');\n\n  const handleChangeFilter = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <Box component=\"div\" sx={{ marginTop: `${matches ? '0px' : '25px'}` }}>\n      <Typography\n        component=\"h2\"\n        variant=\"h4\"\n        sx={{\n          textAlign: 'center',\n          marginBottom: 2,\n          letterSpacing: 2,\n          color: 'Highlight',\n        }}\n      >\n        Contacts\n      </Typography>\n\n      <TextField\n        fullWidth\n        id=\"filter\"\n        label=\"Find contact by name\"\n        name=\"filter\"\n        variant=\"standard\"\n        onChange={handleChangeFilter}\n        value={filter}\n        sx={{\n          '& label': { fontSize: 14 },\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default Filter;\n","import { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport Notiflix from 'notiflix';\n//Material UI\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n//Local import\nimport { Spinner } from '../Spinner/Spinner';\nimport { useDeleteContactMutation } from 'redux/api';\n\nconst ContactItem = ({ contact: { id, name, number } }) => {\n  const navigate = useNavigate();\n  const [deleteContact, { isLoading: isLoadingDelete, isSuccess }] =\n    useDeleteContactMutation();\n\n  useEffect(() => {\n    return () => {\n      if (isSuccess) {\n        Notiflix.Notify.failure(\n          `You have removed ${name} from your list`\n        );\n      }\n    };\n  }, [ name, isSuccess]);\n  return (\n    <>\n      <Box\n        component=\"li\"\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n        }}\n      >\n        <Typography component=\"p\" variant=\"span\" sx={{ width: '45%', fontWeight: '500', color: '#7a7a7a' }}>\n          {name.toUpperCase()}\n        </Typography>\n        <Link href={\"tel:+\" + { number }} underline=\"hover\" sx={{ textAlign: 'left', fontWeight: '500', color: '#7a7a7a'}}>\n          {number}\n        </Link>\n\n        <IconButton\n          aria-label=\"edit\"\n          onClick={() => navigate(`/contacts/edit/${id}`)}\n          sx={{\n            marginLeft: 'auto',\n            '&:hover, &:focus': { bgcolor: '#9ddb8c', color: '#1a821a' },\n          }}\n        >\n          <EditIcon />\n        </IconButton>\n\n        <IconButton\n          aria-label=\"delete\"\n          onClick={() => deleteContact(id)}\n          disabled={isLoadingDelete}\n          sx={{\n            marginLeft: '3px',\n            '&:hover, &:focus': { bgcolor: '#f3dacf', color: '#d31616' },\n          }}\n        >\n          {!isLoadingDelete ? <DeleteIcon /> : <Spinner size={20} />}\n        </IconButton>\n      </Box>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__lJuMM\",\"error\":\"ContactList_error__hlnhE\"};","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n//Material UI\nimport Box from '@mui/material/Box';\n//Local import\nimport ContactItem from '../ContactItem/ContactItem';\nimport style from './ContactList.module.scss';\nimport { useGetContactsQuery } from 'redux/api';\nimport { getFilter } from 'redux/contacts/contactsSelectors';\n\nconst ContactList = () => {\n  const { data: contacts, isError, refetch } = useGetContactsQuery();\n\n  const filter = useSelector(getFilter);\n\n  const getFilteredContacts = () => {\n    const normalizeFilter = filter.toLowerCase().trim();\n\n    return contacts?.filter(({ name }) =>\n      name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const visibleContacts = getFilteredContacts();\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  return (\n    <Box\n      component=\"ul\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        rowGap: 1,\n        width: '100%',\n        marginTop: 2,\n      }}\n    >\n      {contacts && (\n        <>\n          {visibleContacts.length !== 0 ? (\n            visibleContacts.map(contact => {\n              return <ContactItem key={contact.id} contact={contact} />;\n            })\n          ) : (\n            <li className={style.error}>Not found name</li>\n          )}\n        </>\n      )}\n\n      {isError && <li>Ups, something was wrong! Reload page, please</li>}\n    </Box>\n  );\n};\n\nexport default ContactList;\n","import { Outlet } from 'react-router-dom';\n//Material UI\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\n//Local import\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Container\n        component=\"main\"\n        sx={{\n          paddingTop: 4,\n        }}\n      >\n        <Grid container columnSpacing={{ sm: 5, md: 10 }}>\n          <Grid item xs={12} sm={5}>\n            <ContactForm />\n          </Grid>\n\n          <Grid item xs={12} sm={7} sx={{}}>\n            <Filter />\n            <ContactList />\n          </Grid>\n        </Grid>\n      </Container>\n      <Outlet />\n    </>\n  );\n};\n\nexport default ContactsPage;\n","export const normalizedName = name => {\n  if (name === '') return '';\n\n  return name\n    .trim()\n    .split(/\\s+/)\n    .map(word => word[0].toUpperCase() + word.substring(1))\n    .join(' ');\n};\n","import Notiflix from 'notiflix';\n\nexport const validationPhone = phone => {\n  if (phone.length < 7 || phone === '') {\n    Notiflix.Notify.warning('Phone must have 7 character min');\n    return true;\n  } else {\n    return false;\n  }\n};\n"],"names":["Spinner","size","className","styles","ContactForm","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","isError","isLoading","isSuccess","useState","name","setName","phone","setPhone","nameError","setNameError","phoneError","setPhoneError","useEffect","Notiflix","reset","handleAddContact","event","preventDefault","map","contact","find","contactName","toLowerCase","validationPhone","newContact","normalizedName","number","handleChangeName","e","currentTarget","value","handleChangePhone","useAddContact","Typography","component","variant","sx","textAlign","marginBottom","letterSpacing","color","Box","padding","bgcolor","borderRadius","boxShadow","CssBaseline","noValidate","onSubmit","Grid","container","spacing","item","xs","TextField","error","type","required","fullWidth","id","label","onChange","onKeyPress","test","key","Button","disabled","length","mt","getFilter","state","filter","dispatch","useDispatch","useSelector","matches","useMediaQuery","marginTop","setFilter","fontSize","navigate","useNavigate","useDeleteContactMutation","deleteContact","isLoadingDelete","display","alignItems","width","fontWeight","toUpperCase","Link","href","underline","IconButton","onClick","marginLeft","Edit","Delete","refetch","visibleContacts","normalizeFilter","trim","includes","getFilteredContacts","flexDirection","rowGap","style","Container","paddingTop","columnSpacing","sm","md","split","word","substring","join"],"sourceRoot":""}